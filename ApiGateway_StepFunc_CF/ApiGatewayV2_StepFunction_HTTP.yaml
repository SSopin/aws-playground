AWSTemplateFormatVersion: 2010-09-09
Resources:
  MyStepFunction:
    Type: 'AWS::StepFunctions::StateMachine'
    Properties:
      StateMachineName: HelloWorld-StateMachine
      StateMachineType: EXPRESS
      DefinitionString: >-
        {"Comment": "A Hello World example of the Amazon States Language using
        Pass states", "StartAt": "Hello", "States": {"Hello": { "Type": "Pass",
        "Result": "Hello", "Next": "World" }, "World": { "Type": "Pass",
        "Result": "World", "End": true } } }
      RoleArn: !GetAtt 
        - StepFunctionRole
        - Arn
  StepFuncGateway:
    Type: 'AWS::ApiGatewayV2::Api'
    Properties:
      ProtocolType: HTTP
      Name: StepFuncGatewayApi
    DependsOn:
      - MyStepFunction
  StepIntegration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref StepFuncGateway
      Description: StepFunction integration
      IntegrationType: AWS_PROXY
      IntegrationSubtype: StepFunctions-StartSyncExecution
      ConnectionType: INTERNET
      PassthroughBehavior: WHEN_NO_MATCH
      PayloadFormatVersion: '1.0'
      CredentialsArn: !GetAtt 
        - APIGatewayRole
        - Arn
      RequestParameters:
        Input: $request.body
        StateMachineArn: !GetAtt 
          - MyStepFunction
          - Arn
    DependsOn:
      - StepFuncGateway
  StepRoute:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref StepFuncGateway
      RouteKey: POST /step
      Target: !Join 
        - /
        - - integrations
          - !Ref StepIntegration
    DependsOn:
      - StepFuncGateway
      - StepIntegration
  ApiDeployment:
    Type: 'AWS::ApiGatewayV2::Deployment'
    DependsOn:
      - StepRoute
    Properties:
      Description: My deployment
      ApiId: !Ref StepFuncGateway
  MyStage:
    Type: 'AWS::ApiGatewayV2::Stage'
    Properties:
      StageName: Prod
      Description: Prod Stage
      DeploymentId: !Ref ApiDeployment
      ApiId: !Ref StepFuncGateway
    DependsOn:
      - StepFuncGateway
      - ApiLogGroup
  APIGatewayRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - >-
          arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
        - 'arn:aws:iam::aws:policy/AWSStepFunctionsFullAccess'
  StepFunctionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaRole'
  ApiLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      RetentionInDays: 7
