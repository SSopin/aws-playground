{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Metadata": {
        "AWS::CloudFormation::Designer": {
            "af3d00bc-82b3-433a-823b-73b13e691ae4": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 354,
                    "y": 90
                },
                "z": 0,
                "embeds": [],
                "dependson": [
                    "035efbed-44a3-47bb-bc59-1067b037aa4b"
                ]
            },
            "035efbed-44a3-47bb-bc59-1067b037aa4b": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 220,
                    "y": 90
                },
                "z": 0,
                "embeds": []
            },
            "56f5cddc-76d5-48ef-89e6-8c78ee9d37dc": {
                "source": {
                    "id": "af3d00bc-82b3-433a-823b-73b13e691ae4"
                },
                "target": {
                    "id": "035efbed-44a3-47bb-bc59-1067b037aa4b"
                },
                "z": 1
            }
        }
    },
    "Resources": {
        "MyStepFunction": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "035efbed-44a3-47bb-bc59-1067b037aa4b"
                }
            },
            "Properties": {
                "StateMachineName":"HelloWorld-StateMachine",
                "StateMachineType":"STANDARD",
                "DefinitionString":"{\"Comment\": \"A Hello World example of the Amazon States Language using Pass states\", \"StartAt\": \"Hello\", \"States\": {\"Hello\": { \"Type\": \"Pass\", \"Result\": \"Hello\", \"Next\": \"World\" }, \"World\": { \"Type\": \"Pass\", \"Result\": \"World\", \"End\": true } } }",
                "RoleArn": {
                    "Fn::GetAtt": [
                        "StepFunctionRole",
                        "Arn"
                    ]
                }
            }
        },
        
        
        "StepFuncGateway": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
                "ProtocolType": "WEBSOCKET",
                "RouteSelectionExpression": "$request.body.route",
                "Name": "StepFuncGatewayApi"
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "af3d00bc-82b3-433a-823b-73b13e691ae4"
                }
            },
            "DependsOn": [
                "MyStepFunction"
            ]
        },
        
        "StepIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
                "ApiId": {
                    "Ref": "StepFuncGateway"
                },
                "Description": "StepFunction integration",
                "IntegrationType":"AWS",
                "IntegrationMethod": "POST",
                "ConnectionType": "INTERNET",
                "PassthroughBehavior": "NEVER",
                "ContentHandlingStrategy": "CONVERT_TO_TEXT",
                "CredentialsArn": {
                    "Fn::GetAtt": [
                        "APIGatewayRole",
                        "Arn"
                    ]
                },
                "IntegrationUri":{
                    "Fn::Join":[
                        "",
                        [
                            "arn:aws:apigateway:",
                            {
                                "Ref":"AWS::Region"
                            },
                            ":states:action/StartExecution"
                        ]
                    ]
                },
                "RequestTemplates":{
                    "application/json":{
                        "Fn::Sub":[
                            "{\"input\": \"$util.escapeJavaScript($input.json('$'))\",\"stateMachineArn\": \"${arn}\"}",
                            {
                                "arn":{
                                    "Fn::GetAtt": [
                                        "MyStepFunction",
                                        "Arn"
                                    ]
                                }
                            }
                        ]
                    }
                }
            },
            "DependsOn": [
                "StepFuncGateway"
            ]
        },

        
        "StepRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
                "ApiId": {
                    "Ref": "StepFuncGateway"
                },
                "RouteKey": "POST /step",
                "Target": {
                    "Fn::Join": [
                        "/",
                        [
                            "integrations",
                            {
                                "Ref": "StepIntegration"
                            }
                        ]
                    ]
                }
            },
            "DependsOn": [
                "StepFuncGateway",
                "StepIntegration"
            ]
        },
        
        "ApiDeployment": {
            "Type": "AWS::ApiGatewayV2::Deployment",
            "DependsOn": [
                "StepRoute"
            ],
            "Properties": {
                "Description": "My deployment",
                "ApiId": {
                    "Ref": "StepFuncGateway"
                }
            }
        },
        
        "MyStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
                "StageName": "Prod",
                "Description": "Prod Stage",
                "DeploymentId": {
                    "Ref": "ApiDeployment"
                },
                "ApiId": {
                    "Ref": "StepFuncGateway"
                },
                "DefaultRouteSettings": {
                    "DetailedMetricsEnabled": false,
                    "LoggingLevel": "OFF",
                    "DataTraceEnabled": false,
                    "ThrottlingBurstLimit": 10,
                    "ThrottlingRateLimit": 10
                }
            },
            "DependsOn": [
                "StepFuncGateway",
                "ApiLogGroup"
            ]
        }, 
        
        "APIGatewayRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        { 
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "apigateway.amazonaws.com"
                                ]
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Path": "/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
                    "arn:aws:iam::aws:policy/AWSStepFunctionsFullAccess"
                ]
            }
        },
        
        
        "StepFunctionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                     "Statement": [
                        {
                            "Sid": "",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "states.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Path": "/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaRole"
                ]
            }
        },
        
        "ApiLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "RetentionInDays": 7
            }
        }
        
        
        
    }
}